[gcode_macro SAVE_VARIABLES]
gcode:
  {% set x_offset = printer["gcode_macro WORKSPACE"].workspace_x|float %}
  {% set y_offset = printer["gcode_macro WORKSPACE"].workspace_y|float %}
  {% set z_offset = printer["gcode_macro WORKSPACE"].workspace_z|float %}
  SAVE_VARIABLE VARIABLE=x_offset VALUE='{x_offset}'
  SAVE_VARIABLE VARIABLE=y_offset VALUE='{y_offset}'
  SAVE_VARIABLE VARIABLE=z_offset VALUE='{z_offset}'

[gcode_macro LOAD_VARIABLES]
gcode:
  {% set svv = printer.save_variables.variables %}
  UPDATE_WORKSPACE_XYZ X={svv.x_offset} Y={svv.y_offset} Z={svv.z_offset}

[gcode_macro CHECK_WORKSPACE_XYZ]
gcode:
  {% set x_offset = printer["gcode_macro WORKSPACE"].workspace_x|float %}
  {% set y_offset = printer["gcode_macro WORKSPACE"].workspace_y|float %}
  {% set z_offset = printer["gcode_macro WORKSPACE"].workspace_z|float %}

  {% if x_offset == -1 %}
    RESPOND PREFIX="WARNING" MSG="X Offset is not set"
  {%endif%}
  {% if y_offset == -1 %}
    RESPOND PREFIX="WARNING" MSG="Y Offset is not set"
  {%endif%}
  {% if z_offset == -1 %}
    RESPOND PREFIX="WARNING" MSG="Z Offset is not set"
  {%endif%}
  
  RESPOND MSG="UPDATE_WORKSPACE_XYZ X={x_offset} Y={y_offset} Z={z_offset}"
  RESPOND PREFIX="INFO" MSG="Workspace Offset:"
  # RESPOND PREFIX="INFO" MSG="Z Offset: printer["gcode_macro WORKSPACE"].workspace_z"

[gcode_macro GOTO_WORKSPACE_X_Y]
gcode:
  g1 X Y

[gcode_macro SET_WORKSPACE_FROM_TOOL]
gcode:
  {% set x_val = params.X|default(printer.toolhead.position.x)|float %}
  {% set y_val = params.Y|default(printer.toolhead.position.y)|float %}
  {% set z_val = params.Z|default(printer.toolhead.position.z)|float %}
  SET_GCODE_VARIABLE MACRO=WORKSPACE VARIABLE=workspace_x VALUE={x_val}
  SET_GCODE_VARIABLE MACRO=WORKSPACE VARIABLE=workspace_y VALUE={y_val}
  SET_GCODE_VARIABLE MACRO=WORKSPACE VARIABLE=workspace_z VALUE={z_val}
  RESPOND PREFIX="info" MSG="Workspace Position Stored: X{x_val} Y{y_val} Z{z_val}"

[gcode_macro UPDATE_WORKSPACE_XYZ]
gcode:
  {% if params.X is defined %}
    {% set x_val = params.X|float %}
    SET_GCODE_VARIABLE MACRO=WORKSPACE VARIABLE=workspace_x VALUE={x_val}
    RESPOND PREFIX="info" MSG="Workspace X Position Stored: X{x_val}"
  {% endif %}

  {% if params.Y is defined %}
    {% set y_val = params.Y|float %}
    SET_GCODE_VARIABLE MACRO=WORKSPACE VARIABLE=workspace_y VALUE={y_val}
    RESPOND PREFIX="info" MSG="Workspace Y Position Stored: Y{y_val}"
  {% endif %}

  {% if params.Z is defined %}
    {% set z_val = params.Z|float %}
    SET_GCODE_VARIABLE MACRO=WORKSPACE VARIABLE=workspace_z VALUE={z_val}
    RESPOND PREFIX="info" MSG="Workspace Z Position Stored: Z{z_val}"
  {% endif %}

[gcode_macro CLEAR_WORKSPACE_XYZ]
gcode:
  SET_GCODE_VARIABLE MACRO=WORKSPACE VARIABLE=workspace_x VALUE=-1
  SET_GCODE_VARIABLE MACRO=WORKSPACE VARIABLE=workspace_y VALUE=-1
  SET_GCODE_VARIABLE MACRO=WORKSPACE VARIABLE=workspace_z VALUE=-1
  RESPOND PREFIX="info" MSG="Workspace Position Cleared"

[gcode_macro ZERO_WORKSPACE_XYZ]
gcode:
  SET_GCODE_VARIABLE MACRO=WORKSPACE VARIABLE=workspace_x VALUE=0
  SET_GCODE_VARIABLE MACRO=WORKSPACE VARIABLE=workspace_y VALUE=0
  SET_GCODE_VARIABLE MACRO=WORKSPACE VARIABLE=workspace_z VALUE=0
  RESPOND PREFIX="info" MSG="Workspace Position X0 Y0 Z0"

[gcode_macro WORKSPACE]
variable_workspace_x: -1
variable_workspace_y: -1
variable_workspace_z: -1
gcode:
  RESPOND PREFIX="info" MSG="Workspace Offset: G1.0 X{printer.toolhead.position.x} Y{printer.toolhead.position.y} Zprinter.toolhead.position.z}"

[gcode_macro ADJUSTED_MOVE]
variable_CMD: "M112" # Emergency stop
gcode:
  # Retrieve workspace offsets
  {% set x_offset = printer["gcode_macro WORKSPACE"].workspace_x|float %}
  {% set y_offset = printer["gcode_macro WORKSPACE"].workspace_y|float %}
  {% set z_offset = printer["gcode_macro WORKSPACE"].workspace_z|float %}

  # Check if the toolhead is homed
  {% if printer.toolhead.homed_axes != "xyz" %}
    RESPOND PREFIX="error" MSG="Home the machine first"
    CANCEL_PRINT
  {% else %}
    # Construct the move command
    {% set cmd = params.CMD %}
    {% set has_relative_move = False %}

    # Process each axis
    {% for axis in ['X', 'Y', 'Z'] %}
      {% if params[axis] is defined %}
        {% set move_value = params[axis]|float %}
        {% if params[axis].startswith(('+', '-')) %}
          # Handle relative move
          {% set has_relative_move = True %}
          {% set cmd = cmd ~ " " ~ axis ~ move_value|string %}
        {% elif x_offset != -1 and y_offset != -1 and z_offset != -1 %}
          # Handle absolute move with offset
          {% set move_value = move_value + (x_offset if axis == 'X' else (y_offset if axis == 'Y' else z_offset)) %}
          {% set cmd = cmd ~ " " ~ axis ~ move_value|string %}
        {% else %}
          # Invalid move command
          RESPOND PREFIX="ERROR" MSG="Invalid move command or offsets not set"
          CANCEL_PRINT
        {% endif %}
      {% endif %}
    {% endfor %}

    # Add feedrate if provided
    {% if params.F is defined %}
      {% set cmd = cmd ~ " F" ~ params.F|string %}
    {% endif %}

    # Execute the command
    {% if has_relative_move %}
      # Execute relative move directly
      { cmd }
    {% else %}
      # Execute absolute move with offsets
      # RESPOND PREFIX="info" MSG="Executing Adjusted Move. Original: {params}, Adjusted: {cmd}, Offsets: X{x_offset} Y{y_offset} Z{z_offset}"
      { cmd }
    {% endif %}
  {% endif %}
