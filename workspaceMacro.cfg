[gcode_macro CHECK_WORKSPACE_XYZ]
gcode:
  {% set x_offset = printer["gcode_macro WORKSPACE"].workspace_x|float %}
  {% set y_offset = printer["gcode_macro WORKSPACE"].workspace_y|float %}
  {% set z_offset = printer["gcode_macro WORKSPACE"].workspace_z|float %}
  RESPOND PREFIX="INFO" MSG="Workspace Offset: G1.0 X{x_offset} Y{y_offset} Z{z_offset}"
  # RESPOND PREFIX="INFO" MSG="Z Offset: printer["gcode_macro WORKSPACE"].workspace_z"

[gcode_macro SET_WORKSPACE_XYZ]
gcode:
  {% set x_val = params.X|default(printer.toolhead.position.x)|float %}
  {% set y_val = params.Y|default(printer.toolhead.position.y)|float %}
  {% set z_val = params.Z|default(printer.toolhead.position.z)|float %}
  SET_GCODE_VARIABLE MACRO=SET_WORKSPACE_XYZ VARIABLE=workspace_x VALUE={x_val}
  SET_GCODE_VARIABLE MACRO=SET_WORKSPACE_XYZ VARIABLE=workspace_y VALUE={y_val}
  SET_GCODE_VARIABLE MACRO=SET_WORKSPACE_XYZ VARIABLE=workspace_z VALUE={z_val}
  RESPOND PREFIX="info" MSG="Workspace Position Stored: X{x_val} Y{y_val} Z{z_val}"



[gcode_macro CLEAR_WORKSPACE_XYZ]
gcode:
  SET_GCODE_VARIABLE MACRO=WORKSPACE VARIABLE=workspace_x VALUE=-1
  SET_GCODE_VARIABLE MACRO=WORKSPACE VARIABLE=workspace_y VALUE=-1
  SET_GCODE_VARIABLE MACRO=WORKSPACE VARIABLE=workspace_z VALUE=-1
  RESPOND PREFIX="info" MSG="Workspace Position Cleared"
  # RESPOND PREFIX="info" MSG="Setting machine max velocity to 30mm/s for machining"
  # SET_VELOCITY_LIMIT VELOCITY=30

[gcode_macro ZERO_WORKSPACE_XYZ]
gcode:
  SET_GCODE_VARIABLE MACRO=WORKSPACE VARIABLE=workspace_x VALUE=0
  SET_GCODE_VARIABLE MACRO=WORKSPACE VARIABLE=workspace_y VALUE=0
  SET_GCODE_VARIABLE MACRO=WORKSPACE VARIABLE=workspace_z VALUE=0
  RESPOND PREFIX="info" MSG="Workspace Position X0 Y0 Z0"
  # RESPOND PREFIX="info" MSG="Setting machine max velocity to 30mm/s for machining"
  # SET_VELOCITY_LIMIT VELOCITY=30

[gcode_macro WORKSPACE]
variable_workspace_x: -1
variable_workspace_y: -1
variable_workspace_z: -1
gcode:
  RESPOND PREFIX="info" MSG="Workspace Offset: G1.0 X{printer.toolhead.position.x} Y{printer.toolhead.position.y} Zprinter.toolhead.position.z}"

[gcode_macro ADJUSTED_MOVE]
variable_CMD: "M112" # Setting a default emergency stop just in case something goes wrong
gcode:
  {% set x_offset = printer["gcode_macro WORKSPACE"].workspace_x|float %}
  {% set y_offset = printer["gcode_macro WORKSPACE"].workspace_y|float %}
  {% set z_offset = printer["gcode_macro WORKSPACE"].workspace_z|float %}

  # Will allow relative moves in a single axis so you can jog the cutter to the position if the workspace offsets are not set
  {% set relative_move = ((params.X is defined and params.X.startswith(('+', '-')) and not params.Y and not params.Z) or 
                         (params.Y is defined and params.Y.startswith(('+', '-')) and not params.X and not params.Z) or 
                         (params.Z is defined and params.Z.startswith(('+', '-')) and not params.X and not params.Y) and (x_offset == -1 and y_offset == -1 and z_offset == -1)) %}

  {% if printer.toolhead.homed_axes != "xyz" %}
    RESPOND PREFIX="error" MSG="Home the machine and first"
    CANCEL_PRINT # Cancel the job
  {% else %} 
    # axis is homed
    {% if relative_move %} 
      # execute the relative move without offset adjustments so you can jog the head
      # RELATIVE MOVES ONLY ALLOWED WHILE WORKSPACE OFFSETS ARE NOT SET. Fusion 360 will output moves like: 'G1 Z-3.1 F10' during the operation which is not relative and needs the offset applied
      RESPOND PREFIX="info" MSG="Executing relative move: {params}"
      {% set cmd = params.CMD %}  
      {% if params.X is defined %}
        {% set cmd = cmd ~ " X" ~ (params.X|float)|string %}
      {% endif %}
      {% if params.Y is defined %}
        {% set cmd = cmd ~ " Y" ~ (params.Y|float)|string %}
      {% endif %}
      {% if params.Z is defined %}
        {% set cmd = cmd ~ " Z" ~ (params.Z|float)|string %}
      {% endif %}
      {% if params.F is defined %}
        {% set cmd = cmd ~ " F" ~ params.F|string %}
      {% endif %}
      { cmd }
    {% elif x_offset != -1 and y_offset != -1 and z_offset !=-1 %}
      # workspace offsets are set
      # execute the adjusted move with offsets 
      {% set cmd = params.CMD %}
      # I J K for G2 and G3 moves, no offset is required as they are relative positions from the XYZ positions
      {% if params.I is defined %}
        {% set cmd = cmd ~ " I" ~ (params.I|float)|string %}
      {% endif %}
      {% if params.J is defined %}
        {% set cmd = cmd ~ " J" ~ (params.J|float)|string %}
      {% endif %}
      {% if params.K is defined %}
        {% set cmd = cmd ~ " K" ~ (params.K|float)|string %}
      {% endif %}  
      {% if params.X is defined %}
        {% set cmd = cmd ~ " X" ~ (params.X|float + x_offset)|string %}
      {% endif %}
      {% if params.Y is defined %}
        {% set cmd = cmd ~ " Y" ~ (params.Y|float + y_offset)|string %}
      {% endif %}
      {% if params.Z is defined %}
        {% set cmd = cmd ~ " Z" ~ (params.Z|float + z_offset)|string %}
      {% endif %}
      {% if params.F is defined %}
        {% set cmd = cmd ~ " F" ~ params.F|string %}
      {% endif %}
      RESPOND PREFIX="info" MSG="Executing Adjusted Move. Original: {params}, Adjusted: {cmd}, Offsets: X{x_offset} Y{y_offset} Z{z_offset}"
      { cmd }
    {% else %}
      # 'Invalid' move command i.e. G0 X+10 Y+10 or mixed G0 X10 Y+10. The relative move only allows 1 axis at a time, used for jogging the head manually
      # Not sure if this will work for all machines / CAM software - basically expecting all moves to be absolute i.e. G0 X100 Y120 Z10, in either absolute G90 or relative positioning G91
      RESPOND PREFIX="ERROR" MSG="Tried to execute adjusted move with bad values offsets"
      CANCEL_PRINT
    {% endif %}
  {% endif %}


# use a puck probe or probe a metal workpiece directly. Default offset assumes puck of the specified height.
#[probe] needs to be defined
[gcode_macro PROBE_WORKSPACE_Z]
gcode:
  {% set probe_height = params.H|default(10.0)|float %} # 10mm puck probe height unless overriden (i.e. when probing metal directly)
  
  # Make sure the printer is homed
  {% if "z" not in printer.toolhead.homed_axes %}
    RESPOND PREFIX="error" MSG="Z-Axis is not homed. Please home and try again."
    CANCEL_PRINT
  {% else %}
    # Initial fast probe
    PROBE PROBE_SPEED=5 SAMPLES=1 SAMPLE_RETRACT_DIST=1  # Probe downward 15mm at 5mm/s
    
    # Check if the probe was successful
    {% if 'probe' not in printer %}
      RESPOND PREFIX="error" MSG="Probing failed: Z-axis did not trigger"
      CANCEL_PRINT
    {% else %}
      # Back off from the probe
      G91  # Switch to relative positioning
      G1 Z1 F300  # Move upward 1mm
      G90  # Switch back to absolute positioning

      # Slow probe for better accuracy
      PROBE PROBE_SPEED=0.5 SAMPLES=3 SAMPLE_RETRACT_DIST=1  # Probe downward 15mm at 0.5mm/s
      
      # Store the workspace Z-variable with the correction for the probe height
      {% set new_z = printer.toolhead.position.z - probe_height %}
      SET_GCODE_VARIABLE MACRO=WORKSPACE VARIABLE=workspace_z VALUE={new_z}
      
      # Respond to confirm
      RESPOND PREFIX="info" MSG="Workspace Z-axis Probed and Stored: Z{new_z}"
    {% endif %}
  {% endif %}

# Move to max Y (so the bed is foward)
[gcode_macro MOVE_Y_MAX]
gcode:
  # Make sure the printer is homed
  {% if "y" not in printer.toolhead.homed_axes %}
    RESPOND PREFIX="error" MSG="Y-Axis is not homed. Please home and try again."
  {% else %}
    {% set y_max = printer.configfile.config["stepper_y"]["position_max"]|float %}
    # Move Y to its maximum position
    G1 Y{y_max} F3000
    RESPOND PREFIX="info" MSG="Y-Axis moved to maximum position of {y_max}mm."
  {% endif %}
